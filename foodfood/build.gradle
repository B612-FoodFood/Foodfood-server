plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'B612'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    //H2 데이터베이스 추가
//    runtimeOnly 'com.h2database:h2'
    /* 7. MariaDB */
//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // mysql 데이터베이스 사용
    runtimeOnly 'com.mysql:mysql-connector-j'

    /* 1. web */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//  /* 2. 배포시 내장톰캣을 사용하지 않을거라는 dependency */
//    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    /* 3. lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* 4. devtools */
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    /* 5. thymeleaf */
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    /* 6. mybatis */
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'


    /* 8. JDBC */
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    /* 9. JPA */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

//  /* 10-4. querydsl dependencies 추가 */
//    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
//    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
//    //querydsl 추가
//    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
//    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    /* 11. thymeleaf-layout-dialect */
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.0.0'

    /* 12. spring-boot-starter-security */
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'

    /* 13. validation(Bean Validation) */
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    /* 14. modelmapper */
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'

///* 15. thymeleaf-extras-springsecurity5 */
//    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5'

    /* 16. spring-security-test */
    testImplementation group: 'org.springframework.security', name: 'spring-security-test'

    /* 17. hibernate5module*/
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    /* 18. p6spy */
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

    /* 19.junit */
    implementation 'junit:junit:4.13.1'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.0'

    /* 20. jwt 추가*/
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    // com.sun.xml.bind
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
    // javax.xml.bind
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    /* 21. swagger*/
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2"
    implementation "org.springdoc:springdoc-openapi-ui:1.6.11"
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'


    /*JUnit4 추가*/
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

}
repositories {
    mavenCentral()
}


tasks.named('test') {
    useJUnitPlatform()
}
